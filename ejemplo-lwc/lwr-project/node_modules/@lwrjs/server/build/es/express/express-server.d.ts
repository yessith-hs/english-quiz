/// <reference types="node" />
import { Application as ExpressApp } from 'express';
import http from 'http';
import http2 from 'http2';
import { InternalAppServer, InternalAppServerOptions } from '@lwrjs/types';
import AbstractInternalAppServer from '../common/abstract-internal-app-server.js';
/**
 * Express Server Implementation (https://expressjs.com/)
 */
export default class ExpressInternalServer extends AbstractInternalAppServer implements InternalAppServer<'express'> {
    private expressApp;
    private httpServer?;
    private http2Server?;
    private basePath?;
    constructor(options: InternalAppServerOptions);
    getImpl(): ExpressApp;
    createHttpServer(): http.Server;
    createHttp2Server(): http2.Http2Server;
    use(middleware: Function): void;
    all(path: string | Array<string>, middleware: Function): void;
    get(path: string | Array<string>, middleware: Function): void;
    post(path: string | Array<string>, middleware: Function): void;
    useCompression(): void;
    getRegexWildcard(): string;
    initRoutes(): void;
}
//# sourceMappingURL=express-server.d.ts.map